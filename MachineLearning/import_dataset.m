function [AUTHID,STATUS,sEXT,sNEU1,sAGR1,sCON1,sOPN1,cEXT1,cNEU1,cAGR1,cCON1,cOPN,DATE,NETWORKSIZE,BETWEENNESS,NBETWEENNESS,DENSITY,BROKERAGE,NBROKERAGE,TRANSITIVITY] = import_dataset(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [AUTHID,STATUS,SEXT,SNEU1,SAGR1,SCON1,SOPN1,CEXT1,CNEU1,CAGR1,CCON1,COPN,DATE,NETWORKSIZE,BETWEENNESS,NBETWEENNESS,DENSITY,BROKERAGE,NBROKERAGE,TRANSITIVITY]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [AUTHID,STATUS,SEXT,SNEU1,SAGR1,SCON1,SOPN1,CEXT1,CNEU1,CAGR1,CCON1,COPN,DATE,NETWORKSIZE,BETWEENNESS,NBETWEENNESS,DENSITY,BROKERAGE,NBROKERAGE,TRANSITIVITY]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [AUTHID,STATUS,sEXT,sNEU1,sAGR1,sCON1,sOPN1,cEXT1,cNEU1,cAGR1,cCON1,cOPN,DATE,NETWORKSIZE,BETWEENNESS,NBETWEENNESS,DENSITY,BROKERAGE,NBROKERAGE,TRANSITIVITY] = importfile('mypersonality_final_utf8_ok.csv',2, 9918);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/04/27 17:05:54

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: text (%q)
%	column2: text (%q)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: text (%q)
%   column9: text (%q)
%	column10: text (%q)
%   column11: text (%q)
%	column12: text (%q)
%   column13: text (%q)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%q%q%f%f%f%f%f%q%q%q%q%q%q%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
AUTHID = dataArray{:, 1};
STATUS = dataArray{:, 2};
sEXT = dataArray{:, 3};
sNEU1 = dataArray{:, 4};
sAGR1 = dataArray{:, 5};
sCON1 = dataArray{:, 6};
sOPN1 = dataArray{:, 7};
cEXT1 = dataArray{:, 8};
cNEU1 = dataArray{:, 9};
cAGR1 = dataArray{:, 10};
cCON1 = dataArray{:, 11};
cOPN = dataArray{:, 12};
DATE = dataArray{:, 13};
NETWORKSIZE = dataArray{:, 14};
BETWEENNESS = dataArray{:, 15};
NBETWEENNESS = dataArray{:, 16};
DENSITY = dataArray{:, 17};
BROKERAGE = dataArray{:, 18};
NBROKERAGE = dataArray{:, 19};
TRANSITIVITY = dataArray{:, 20};


